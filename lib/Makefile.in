#
# Makefile.in for Gauche/lib
#  $Id: Makefile.in,v 1.133 2005-08-31 12:43:29 shirok Exp $

.PHONY: all check pre-package install uninstall slibcat slibcat-in-place \
	clean distclean maintainer-clean

DESTDIR =

prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)
top_builddir = @top_builddir@
top_srcdir   = @top_srcdir@

GAUCHE_DATA_DIR = @datadir@/gauche
SCM_INSTALL_DIR = $(GAUCHE_DATA_DIR)/@GAUCHE_VERSION@/lib
INSTALL         = @INSTALL@
MKINSTDIR       = $(top_srcdir)/mkinstalldirs
SLIB_DIR        = @SLIB_DIR@

GENERATED       = gauche/vm/insn.scm
CONFIG_GENERATED = Makefile slib.scm

SUBDIRS  = gauche gauche/vm gauche/serializer gauche/interactive gauche/mop \
           gauche/package \
	   srfi-14 srfi-29 \
           binary dbm math util compat file rfc text www

SCMFILES = srfi-0.scm \
       srfi-4.scm srfi-5.scm srfi-7.scm srfi-9.scm srfi-11.scm \
       srfi-14.scm srfi-14/query.scm srfi-14/set.scm \
       srfi-26.scm srfi-27.scm \
       srfi-29.scm srfi-29/bundle.scm srfi-29/format.scm \
       srfi-31.scm srfi-37.scm srfi-42.scm srfi-55.scm \
       slib.scm	 \
       gauche/redefutil.scm gauche/test.scm \
       gauche/macroutil.scm gauche/stringutil.scm \
       gauche/condutil.scm \
       gauche/regexp.scm gauche/process.scm gauche/signal.scm \
       gauche/numerical.scm gauche/let-opt.scm gauche/logical.scm \
       gauche/vm/debugger.scm gauche/vm/insn.scm gauche/vm/profiler.scm \
       gauche/procedure.scm \
       gauche/serializer.scm gauche/serializer/aserializer.scm \
       gauche/parseopt.scm gauche/interactive.scm gauche/interactive/info.scm \
       gauche/selector.scm gauche/logger.scm gauche/portutil.scm \
       gauche/time.scm gauche/hook.scm gauche/hashutil.scm gauche/modutil.scm \
       gauche/libutil.scm gauche/sortutil.scm gauche/fileutil.scm \
       gauche/common-macros.scm gauche/singleton.scm gauche/validator.scm \
       gauche/version.scm gauche/collection.scm gauche/sequence.scm \
       gauche/interpolate.scm gauche/parameter.scm gauche/defvalues.scm \
       gauche/listener.scm gauche/config.scm gauche/reload.scm \
       gauche/mop/instance-pool.scm gauche/mop/validator.scm \
       gauche/mop/propagate.scm gauche/mop/singleton.scm \
       gauche/cgen.scm \
       gauche/package.scm gauche/package/build.scm gauche/package/fetch.scm \
       gauche/package/util.scm gauche/package/compile.scm \
       binary/pack.scm \
       dbi.scm dbm.scm dbm/fsdbm.scm \
       math/const.scm \
       util/isomorph.scm util/toposort.scm util/queue.scm util/tree.scm \
       util/digest.scm util/combinations.scm util/lcs.scm util/list.scm \
       util/record.scm util/relation.scm util/stream.scm \
       compat/jfilter.scm compat/stk.scm \
       file/filter.scm \
       rfc/822.scm rfc/mime.scm rfc/base64.scm rfc/uri.scm rfc/cookie.scm \
       rfc/quoted-printable.scm rfc/http.scm rfc/hmac.scm \
       text/csv.scm text/tr.scm text/parse.scm text/tree.scm text/sql.scm \
       text/html-lite.scm text/info.scm text/gettext.scm text/diff.scm \
       www/cgi.scm www/cgi-test.scm

all: $(GENERATED)

check:

pre-package: $(GENERATED)

install:
	for d in $(SUBDIRS); do \
	  $(MKINSTDIR) $(DESTDIR)$(SCM_INSTALL_DIR)/$$d; \
	done
	for p in $(SCMFILES); do \
	  $(INSTALL) -m 444 $$p $(DESTDIR)$(SCM_INSTALL_DIR)/$$p; \
	done
	if test -f slibcat; then \
	  $(INSTALL) -m 444 slibcat $(DESTDIR)$(SCM_INSTALL_DIR)/slibcat; \
	fi

uninstall:

# If we have slib, creates catalog file for Gauche.   This should be called
# after everything is installed.
# For RPM, this has to be called in the postinstall script instead of
# installation script.
slibcat : 
	if test -f $(SLIB_DIR)/require.scm; then \
	  $(exec_prefix)/bin/gosh -ftest -uslib -E"require 'new-catalog" -Eexit;\
	fi

# Some package systems don't allow to run postinstall commands.  For such
# systems, this target tries to create "slibcat" within this directory
# before installing gosh.
slibcat-in-place :
	if test -f $(SLIB_DIR)/require.scm; then \
	  $(SHELL) ./mklibcat $(top_builddir)/src/gosh ; \
	fi

clean:
	rm -f core slibcat *~
	for d in $(SUBDIRS); do (cd $$d; rm -f core *~); done

distclean: clean
	rm -f $(CONFIG_GENERATED)

maintainer-clean: clean
	rm -f $(CONFIG_GENERATED) $(GENERATED)

