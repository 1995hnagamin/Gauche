dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.41 2001-10-29 09:41:55 shirok Exp $
AC_INIT(src/gauche.h)
AC_CONFIG_HEADER(src/gauche/config.h)
AC_CANONICAL_SYSTEM

dnl ==========================================================
dnl Process args given to configre

dnl --enable-multibyte
AC_ARG_ENABLE(multibyte, [  --enable-multibyte[=ENCODING]:  Enables multibyte string handling.
                          This option is ON by default.  Following encodings
                          are currently recognized:
                             euc-jp     EUC-JP code (default)
                             utf-8      UTF-8
                             sjis       Shift-JIS
                             no         No multibyte support ], [
 case $enable_multibyte in
   euc-jp|yes)     AC_DEFINE(GAUCHE_CHAR_ENCODING_EUC_JP);;
   utf-8|utf8)     AC_DEFINE(GAUCHE_CHAR_ENCODING_UTF_8);;
   sjis|shift-jis) AC_DEFINE(GAUCHE_CHAR_ENCODING_SJIS);;
   no|none) ;;
   *) echo "unrecognized encoding option: '$enable_multibyte'; type ./configure --help for available options"
      exit 1;;
 esac], [ AC_DEFINE(GAUCHE_CHAR_ENCODING_EUC_JP)])

dnl --with-slib
SLIB_DIR=/usr/local/slib
AC_ARG_WITH(slib, [  --with-slib[=PATH]:     Configure Gauche's slib module to use Aubrey
                          Jaffer's SLIB installed under PATH.  If PATH is
                          not specified, or this option is omitted, Gauche
                          still tries to find your slib installation from
                          some typical places.], [
 case $with_slib in 
   no)  search_slib=no;;
   yes) search_slib=yes;;
   *)   search_slib=no; SLIB_DIR=$with_slib;;
 esac
], [ search_slib=yes ])

if test $search_slib = "yes"; then
  AC_MSG_CHECKING(slib)
  slib_found=no
  for dir in /usr/local/slib /usr/local/lib/slib /usr/share/slib /usr/local/share/slib /usr/src/slib; do
    if test -f $dir/require.scm; then
       SLIB_DIR=$dir
       AC_MSG_RESULT($SLIB_DIR)
       slib_found=yes
       break
    fi
  done
  if test $slib_found = "no"; then
    AC_MSG_RESULT([not found, using fallback $SLIB_DIR])
  fi
fi
AC_SUBST(SLIB_DIR)

dnl --with-iconv, --with-iconv-lib
dnl  These are handled by ext/charconv.  Here I just put a help message.
AC_ARG_WITH(iconv, [  --with-iconv[=PATH]:    Use iconv function installed under PATH.
                          Gauche's charconv module uses iconv if it is
                          available.   If your system has iconv function
                          in non-trivial location, specify this option.
                          If you don't want to use iconv for some reason,
                          say --without-iconv. ])
AC_ARG_WITH(iconv, [  --with-iconv-lib=LIB:   If your system needs to use external library for
                          iconv and which is not libiconv, specify it.  For
                          example, if you need -lconv to use iconv, say
                            --with-iconv-lib=conv])

dnl --with-rpath=PATH:...
rpath=
AC_ARG_WITH(rpath, [  --with-rpath=PATH:PATH... : Use -rpath option while building dynamically
                          loadable objects (experimental).], [
  case $with_rpath in
    yes|no) ;;
    *) rpath="`echo $with_rpath | tr ':' '\012' | sed 's/^/-Wl,-rpath /' | tr '\012' ' '`";;
  esac
])

dnl ==========================================================
dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_CHECK_PROGS(AR, ar gar)
AC_CHECK_PROGS(AS, as gas)

dnl ==========================================================
dnl Checks for libraries.
AC_CHECK_LIB(m, sin) dnl needed to check trunc and rint below

dnl ===========================================================
dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(sys/time.h glob.h dlfcn.h stdint.h getopt.h)

dnl ===========================================================
dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE
AC_C_BIGENDIAN
AC_STRUCT_TM
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(int)
dnl Checks non-POSIX members of system structure
AC_CACHE_CHECK(struct group has gr_passwd, ac_cv_struct_gr_passwd, [
AC_TRY_COMPILE([#include <grp.h>], [
struct group g;
const char *p = g.gr_passwd;
], ac_cv_struct_gr_passwd=yes, ac_cv_struct_gr_passwd=no)])

if test "$ac_cv_struct_gr_passwd" = yes; then
AC_DEFINE(HAVE_GR_PASSWD)
fi

AC_CACHE_CHECK(struct passwd has pw_passwd, ac_cv_struct_pw_passwd, [
AC_TRY_COMPILE([#include <pwd.h>], [
struct passwd pw;
const char *p = pw.pw_passwd;
], ac_cv_struct_pw_passwd=yes, ac_cv_struct_pw_passwd=no)])

if test "$ac_cv_struct_pw_passwd" = yes; then
AC_DEFINE(HAVE_PW_PASSWD)
fi

AC_CACHE_CHECK(struct passwd has pw_gecos, ac_cv_struct_pw_gecos, [
AC_TRY_COMPILE([#include <pwd.h>], [
struct passwd pw;
const char *p = pw.pw_gecos;
], ac_cv_struct_pw_gecos=yes, ac_cv_struct_pw_gecos=no)])

if test "$ac_cv_struct_pw_gecos" = yes; then
AC_DEFINE(HAVE_PW_GECOS)
fi

AC_CACHE_CHECK(struct passwd has pw_class, ac_cv_struct_pw_class, [
AC_TRY_COMPILE([#include <pwd.h>], [
struct passwd pw;
const char *p = pw.pw_class;
], ac_cv_struct_pw_class=yes, ac_cv_struct_pw_class=no)])

if test "$ac_cv_struct_pw_class" = yes; then
AC_DEFINE(HAVE_PW_CLASS)
fi

dnl checks if time_t is integer or flonum
AC_CACHE_CHECK(time_t is integral, ac_cv_type_time_t_integral, [
AC_TRY_RUN([
#include <time.h>
int main()
{
   time_t t = 3.14;
   return (t == 3.14);
}], ac_cv_type_time_t_integral=yes, ac_cv_type_time_t_integral=no,
ac_cv_type_time_t_integral=yes)])

if test "$ac_cv_type_time_t_integral" = yes; then
AC_DEFINE(INTEGRAL_TIME_T)
fi

dnl ===========================================================
dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL

AC_CHECK_FUNCS(isnan isinf trunc rint)
AC_CHECK_FUNCS(symlink readlink mkstemp select putenv)
AC_CHECK_FUNCS(random srandom lrand48 srand48)

dnl Checks if crypt() exists and whether it's in libc or libcrypt.
AC_SEARCH_LIBS(crypt, crypt, HAVE_CRYPT=yes, HAVE_CRYPT=no)
AC_DEFINE(HAVE_CRYPT)

dnl Checs if dlopen exists, and if it's in libc or libdl.
AC_SEARCH_LIBS(dlopen, dl, HAVE_DLOPEN=yes, HAVE_DLOPEN=no)
AC_CHECK_LIB(dyld, dlopen, HAVE_DLOPEN=yes; LIBS="-ldyld $LIBS", HAVE_DLOPEN=no)
AC_DEFINE(HAVE_DLOPEN)

dnl Checks compiler options for dynamic link.
dnl
dnl  SHLIB_SO_SUFFIX     suffix of dynamic loadable module, e.g. ".so"
dnl  SHLIB_SO_CFLAGS     flags to compile files which is dynamically loadable,
dnl                      e.g. "-fpic"
dnl  SHLIB_SO_LDFLAGS    flags to link files to create dynamically loadable
dnl                      module, e.g. "-shared -o"
dnl  SHLIB_MAIN_LDFLAGS  flags required to compile a main program which
dnl                      exposes symbols to be referred by the dynamically
dnl                      loaded module, e.g. "-rdynamic"
dnl  LIBGAUCHE_SO        defined as "libgauche.$(SHLIB_SO_SUFFIX)" if
dnl                      system supports dso.  empty otherwise.

AC_MSG_CHECKING(how to make dynamic loadable module)
case $host in
  *-linux-gnu|*freebsd*)
    SHLIB_SO_CFLAGS="-fpic"
    SHLIB_SO_LDFLAGS="$rpath -shared -o"
    SHLIB_SO_SUFFIX="so"
    SHLIB_MAIN_LDFLAGS="-rdynamic"
    SHLIB_OK=ok
    ;;
  *netbsd*)
    SHLIB_SO_CFLAGS="-fPIC -DPIC"
    SHLIB_SO_LDFLAGS="$rpath -shared -o"
    SHLIB_SO_SUFFIX="so"
    SHLIB_MAIN_LDFLAGS="-rdynamic"
    SHLIB_OK=ok
    ;;
  *darwin*)
# -no-cpp-precomp is not related to shared library, but needed to
# get src/{vm.c,char.c} compiled -- skimu
    SHLIB_SO_CFLAGS="-no-cpp-precomp -fPIC -fno-common"
    SHLIB_SO_LDFLAGS="-bundle -undefined suppress -o"
    SHLIB_SO_SUFFIX="so"
    SHLIB_DYLIB_LDFLAGS="-dynamiclib -o"
    SHLIB_DYLIB_SUFFIX="dylib"
    SHLIB_LIBS_FOR_EXT=""
    SHLIB_MAIN_LDFLAGS=""
    SHLIB_OK=ok
    ;;
  mips-sgi-irix*)
    if test "$CC" = gcc; then
      SHLIB_SO_CFLAGS="-fpic"
    else
      SHLIB_SO_CFLAGS="-KPIC"
    fi
    SHLIB_SO_LDFLAGS="$rpath -shared -o"
    SHLIB_SO_SUFFIX="so"
    SHLIB_MAIN_LDFLAGS=""
    SHLIB_OK=ok
    ;;
  *solaris*)
    if test "$CC" = gcc; then
      SHLIB_SO_CFLAGS="-fPIC"
      SHLIB_SO_LDFLAGS="-shared -o"
    else
      SHLIB_SO_CFLAGS="-Kpic"
      SHLIB_SO_LDFLAGS="-G -h"
    fi
    SHLIB_SO_SUFFIX="so"
    SHLIB_MAIN_LDFLAGS=""
    SHLIB_OK=ok
    ;;
  *)
    SHLIB_SO_CFLAGS=""
    SHLIB_SO_LDFLAGS=""
    SHLIB_SO_SUFFIX=""
    SHLIB_MAIN_LDFLAGS=""
    SHLIB_OK=unknown
    ;;
esac
if test X$SHLIB_DYLIB_LDFLAGS = X; then
	SHLIB_DYLIB_LDFLAGS=$SHLIB_SO_LDFLAGS
	SHLIB_DYLIB_SUFFIX=$SHLIB_SO_SUFFIX
fi
if test X$SHLIB_OK = Xok; then
  LIBGAUCHE_SO="libgauche.$SHLIB_DYLIB_SUFFIX"
else
  LIBGAUCHE_SO=
fi
AC_SUBST(SHLIB_SO_CFLAGS)
AC_SUBST(SHLIB_SO_LDFLAGS)
AC_SUBST(SHLIB_SO_SUFFIX)
AC_SUBST(SHLIB_LIBS_FOR_EXT)
AC_SUBST(SHLIB_DYLIB_LDFLAGS)
AC_SUBST(SHLIB_DYLIB_SUFFIX)
AC_SUBST(SHLIB_MAIN_LDFLAGS)
AC_SUBST(LIBGAUCHE_SO)
AC_DEFINE_UNQUOTED(SHLIB_SO_SUFFIX, "$SHLIB_SO_SUFFIX")
AC_MSG_RESULT($SHLIB_OK)

dnl ===========================================================
dnl Add version macro
GAUCHE_VERSION=`cat VERSION`
AC_SUBST(GAUCHE_VERSION)
AC_DEFINE_UNQUOTED(GAUCHE_VERSION, "$GAUCHE_VERSION")

dnl ===========================================================
dnl Configure extensions
changequote(<<, >>)dnl
extensions=`grep '^SUBDIRS=' ext/Makefile | sed -e 's/SUBDIRS=//' -e 's@[A-Za-z0-9_-][A-Za-z0-9_-]*@ext/&@g'`
changequote([,])dnl
AC_CONFIG_SUBDIRS($extensions)

dnl ===========================================================
dnl Create output files
AC_OUTPUT(src/Makefile src/gauche-config lib/Makefile lib/slib.scm
          gc/Makefile
          Makefile)
