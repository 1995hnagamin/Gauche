#! /bin/sh

#
# Retrieve configuration parameters
#
# $Id: gauche-config.in,v 1.21 2003-07-19 11:47:30 shirok Exp $
#

prefix=${prefix:-@prefix@}
exec_prefix=@exec_prefix@

cc="@CC@"

datadir=@datadir@/gauche
archdir=@libdir@/gauche

gauche_incdir="$archdir/@GAUCHE_VERSION@/include"
gauche_libdir="$datadir/@GAUCHE_VERSION@/lib"
gauche_aclocaldir="$datadir/@GAUCHE_VERSION@/"
gauche_archdir="$archdir/@GAUCHE_VERSION@/@host@"
gauche_siteincdir="$archdir/site/include"
gauche_sitelibdir="$datadir/site/lib"
gauche_sitearchdir="$archdir/site/@GAUCHE_VERSION@/@host@"
gauche_mandir="@mandir@"
gauche_infodir="@infodir@"
gauche_version="@GAUCHE_VERSION@"
gauche_libs="@LIBS@"
gauche_configure_args="@GAUCHE_CONFIGURE_ARGS@"
arch="@host@"

local_incdir="@LOCAL_INC@"
local_libdir="@LOCAL_LIB@"

default_cflags="@DEFAULT_CFLAGS@"

# NB: shlib-related parameters should be handled by libtool.
# These are kept only for backward compatibility of extensions
# written for pre-0.7 Gauche
shlib_so_suffix="@SHLIB_SO_SUFFIX@"
shlib_so_cflags="@SHLIB_SO_CFLAGS@"
shlib_so_ldflags="@SHLIB_SO_LDFLAGS@"
shlib_so_libs="@SHLIB_LIBS_FOR_EXT@"
shlib_dylib_suffix="@SHLIB_DYLIB_SUFFIX@"
shlib_dylib_ldflags="@SHLIB_DYLIB_LDFLAGS@"
shlib_main_ldflags="@SHLIB_MAIN_LDFLAGS@"
libgauche_so="@LIBGAUCHE_SO@"

usage () {
    cat <<EOF
Usage: gauche-config [option]

General parameter
  -V   the current gauche version

Parameters to compile an application using Gauche
  -I   include paths required to compile programs using gauche
  -L   library paths required to link programs using gauche
  -l   libraries required to link programs using gauche
  --cc name of the compiler
  --ac directory that contains Gauche specific autoconf macro
  --reconfigure
       prints the command line used to configure the current
       installation.
  --arch
       prints the architecture signature

Parameters to install files
  --syslibdir/--sitelibdir
       directories where system/site scheme files go
  --sysarchdir/--sitearchdir
       directories where system/site DSO files go
  --sysincdir/--siteincdir
       directories where system/site header files of extensions go
  --mandir/--infodir
       directories where gauche manpage and info docs are installed

Parameters to help building extensions
  --so-suffix
       Suffix for dynamically loadable modules
  --so-cflags
       CFLAGS to create dynamically loadable modules
  --so-ldflags
       LDFLAGS to create dynamically loadable modules
  --so-libs
       Required libraries to create dynamically loadable modules
  --dylib-suffix
       Suffix for dynamically linked libraries
  --dylib-ldflags
       LDFLAGS to create dynamically linked libraries
  --fixup-extension FILE [MODULE]
       creates FILE_head.c and FILE_tail.c.  They are required for GC
       to work properly on some platforms.  MODULE must be the extension
       module's name, and has to match the name given to the
       SCM_INIT_EXTENSION macro in the extension initialization code. 
       If MODULE is omitted, FILE is used as the module's name.
EOF
    exit 1
}

case $1 in
  -V) echo $gauche_version;;
  -I) echo "-I$gauche_incdir $local_incdir";;
  -L) echo "-L$gauche_archdir $local_libdir";;
  -l) echo "-lgauche $gauche_libs";;
  --cc) echo $cc;;
  --ac) echo $gauche_aclocaldir;;
  --reconfigure) echo ./configure $gauche_configure_args;;

  --sysincdir)   echo $gauche_incdir;;
  --siteincdir)  echo $gauche_siteincdir;;
  --syslibdir)   echo $gauche_libdir;;
  --sitelibdir)  echo $gauche_sitelibdir;;
  --sysarchdir)  echo $gauche_archdir;;
  --sitearchdir) echo $gauche_sitearchdir;;
  --mandir)      echo $gauche_mandir;;
  --infodir)     echo $gauche_infodir;;
  --arch)        echo $arch;;

  --local-incdir) echo $local_incdir;;
  --local-libdir) echo $local_libdir;;

  --default-cflags) echo $default_cflags;;

  --so-suffix) echo $shlib_so_suffix;;
  --so-cflags) echo $shlib_so_cflags;;
  --so-ldflags) echo $shlib_so_ldflags;;
  --so-libs)    echo $shlib_so_libs;;
  --dylib-suffix) echo $shlib_dylib_suffix;;
  --dylib-ldflags) echo $shlib_dylib_ldflags;;
  --libgauche-so) echo $libgauche_so;;

  --fixup-extension)
     file=$2
     module=$3
     if test X$file = X; then usage; fi
     if test X$module = X; then module=`echo $file | tr -c "\012A-Za-z0-9" "_"`; fi
     echo "void *Scm__datastart_$module = (void*)&Scm__datastart_$module;" > ${file}_head.c
     echo "void *Scm__bssstart_$module;" >> ${file}_head.c
     echo "void *Scm__dataend_$module = (void*)&Scm__dataend_$module;" > ${file}_tail.c
     echo "void *Scm__bssend_$module;" >> ${file}_tail.c
     ;;
  *)  usage;;
esac

# Local variables:
# mode: shell-script
# end:
