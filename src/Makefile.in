prefix = @prefix@
exec_prefix = @exec_prefix@
srcdir = @srcdir@
VPATH = $(srcdir)

CC = @CC@
LIBS = @LIBS@
DEFS = @DEFS@
OPTFLAGS = @OPTFLAGS@
CFLAGS = @CFLAGS@ @DEFS@ -I$(srcdir) -I$(srcdir)/../gc/include \
         @LOCAL_INC@ @SHLIB_SO_CFLAGS@ $(OPTFLAGS)
LDFLAGS = @LOCAL_LIB@ @SHLIB_MAIN_LDFLAGS@
AR = @AR@
RANLIB = @RANLIB@

GENERATED = stdlib.c extlib.c exclib.c syslib.c moplib.c thrlib.c
CONFIG_GENERATED = Makefile gauche-config gauche/config.h ldwrap.sh

LIB_INSTALL_DIR = @libdir@
BIN_INSTALL_DIR = @bindir@
DATA_INSTALL_DIR = @datadir@

GAUCHE_DATA_DIR = @datadir@/gauche
GAUCHE_ARCH_DIR = @libdir@/gauche

HEADER_INSTALL_DIR    = $(GAUCHE_ARCH_DIR)/@GAUCHE_VERSION@/include
SUBHEADER_INSTALL_DIR = $(HEADER_INSTALL_DIR)/gauche
SCM_INSTALL_DIR       = $(GAUCHE_DATA_DIR)/@GAUCHE_VERSION@/lib
ARCH_INSTALL_DIR      = $(GAUCHE_ARCH_DIR)/@GAUCHE_VERSION@/@host@
SITE_SCM_DIR          = $(GAUCHE_DATA_DIR)/site/lib
SITE_ARCH_DIR         = $(GAUCHE_ARCH_DIR)/site/@GAUCHE_VERSION@/@host@
ARCH = @host@

GOSH_USE_SHLIB = @GOSH_USE_SHLIB@

INSTALL_HEADERS = gauche.h ../gc/include/gc.h ../gc/include/gc_pthread_redirects.h
INSTALL_SUBHEADERS = gauche/config.h gauche/vm.h gauche/vminsn.h \
                     gauche/char_euc_jp.h gauche/char_utf_8.h    \
                     gauche/char_sjis.h gauche/char_none.h       \
                     gauche/predef-syms.h gauche/extend.h        \
		     gauche/class.h gauche/exception.h           \
                     gauche/pthread.h gauche/uthread.h
INSTALL_LIBS = libgauche.a @LIBGAUCHE_SO@
INSTALL_BINS = gosh gauche-config
INSTALL_SCMS = genstub gauche-init.scm

INSTALL=@INSTALL@

GCLIB = ../gc/.libs/libgc.a

OBJS = core.o vm.o compile.o macro.o error.o class.o boolean.o char.o \
       string.o list.o port.o hash.o write.o read.o vector.o weak.o \
       symbol.o keyword.o compare.o regexp.o signal.o \
       module.o proc.o number.o bignum.o load.o promise.o repl.o \
       system.o stdlib.o extlib.o exclib.o syslib.o moplib.o

TESTFILES = `cat ../test/TESTS`

.SUFFIXES: .stub

.stub.c:
	gosh ./genstub -D LIBGAUCHE_BODY $<

HDRS = gauche.h gauche/arch.h

all : gosh @LIBGAUCHE_SO@

gosh : @GOSH_LIBGAUCHE_LIB@ main.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o gosh main.o @GOSH_LIBGAUCHE_FILES@ $(LIBS)

$(OBJS) main.o : $(HDRS)

stdlib.c : stdlib.stub genstub 
extlib.c : extlib.stub genstub
exclib.c : exclib.stub genstub
syslib.c : syslib.stub genstub
moplib.c : moplib.stub genstub

port.o : port.c portapi.c

libgauche.a : $(OBJS) GCOBJS
	gcobjs=`cat GCOBJS`; $(AR) cr libgauche.a $(OBJS) `for f in $$gcobjs; do echo ../gc/$$f; done`
	$(RANLIB) libgauche.a

@LIBGAUCHE_SO@ : $(OBJS) GCOBJS
	rm -rf .lo
	mkdir .lo
	for f in `cat GCOBJS`; do cp ../gc/`echo $$f | sed 's/o$$/lo/'` .lo/$$f; done
	sh ldwrap.sh $(OBJS) .lo/*.o @LOCAL_LIB@ $(LIBS)

GCOBJS : $(GCLIB)
	(cd ../gc > /dev/null; echo *.o) > GCOBJS

gauche/arch.h :
	@rm -f gauche/arch.h
	@echo "/* Generated by Makefile.  DO NOT EDIT */" > gauche/arch.h
	@echo '#define GAUCHE_ARCH "$(ARCH)"' >> gauche/arch.h
	@echo '#define GAUCHE_LIB_DIR "$(SCM_INSTALL_DIR)"' >> gauche/arch.h
	@echo '#define GAUCHE_ARCH_DIR "$(ARCH_INSTALL_DIR)"' >> gauche/arch.h
	@echo '#define GAUCHE_SITE_LIB_DIR "$(SITE_SCM_DIR)"' >> gauche/arch.h
	@echo '#define GAUCHE_SITE_ARCH_DIR "$(SITE_ARCH_DIR)"' >> gauche/arch.h

test : gosh
	@rm -f test.log
	$(MAKE) test-vmstack; ./test-vmstack >> test.log
	$(MAKE) test-arith; ./test-arith >> test.log
	@for testfile in $(TESTFILES); do \
	  ./gosh -ftest -I../test $$testfile >> test.log; \
	done
	@./gosh -ftest -e "(define *case-fold* #f)" ../test/symcase.scm >> test.log
	@./gosh -ftest -fcase-fold -e "(define *case-fold* #t)" ../test/symcase.scm >> test.log
	@echo "See test.log for details."

test-vmstack : test-vmstack.o @LIBGAUCHE_SO@
	$(CC) $(CFLAGS) $(LDFLAGS) -o test-vmstack test-vmstack.o @GOSH_LIBGAUCHE_FILES@ $(LIBS)

test-arith : test-arith.o @LIBGAUCHE_SO@
	$(CC) $(CFLAGS) $(LDFLAGS) -o test-arith test-arith.o @GOSH_LIBGAUCHE_FILES@  $(LIBS)

test-arith.o : gauche/arith.h

clean :
	rm -rf core core.[0-9]* gosh test-vmstack test-arith   \
	       @LIBGAUCHE_SO@ *.o *~ *.a *.t *.def *.exp *.exe \
	       .lo GCOBJS test.log test.dir so_locations gauche/*~ gauche/arch.h

distclean : clean
	rm -f $(CONFIG_GENERATED)

realclean : clean
	rm -f $(CONFIG_GENERATED) $(GENERATED)

install : all
	if test ! -d $(DATA_INSTALL_DIR); then \
	  $(INSTALL) -d $(DATA_INSTALL_DIR); \
	fi
	$(INSTALL) -d $(GAUCHE_DATA_DIR)
	$(INSTALL) -d $(GAUCHE_ARCH_DIR)
	$(INSTALL) -d $(HEADER_INSTALL_DIR)
	for f in $(INSTALL_HEADERS); do \
	  $(INSTALL) -m 444 $$f $(HEADER_INSTALL_DIR); \
	done
	$(INSTALL) -d $(SUBHEADER_INSTALL_DIR)
	for f in $(INSTALL_SUBHEADERS); do \
	  $(INSTALL) -m 444 $$f $(SUBHEADER_INSTALL_DIR); \
	done
	if test ! -d $(LIB_INSTALL_DIR); then \
	  $(INSTALL) -d $(LIB_INSTALL_DIR); \
	fi
	$(INSTALL) -d $(ARCH_INSTALL_DIR)
	for f in $(INSTALL_LIBS); do \
	  $(INSTALL) -m 444 $$f $(LIB_INSTALL_DIR); \
	  $(INSTALL) -m 555 $$f $(ARCH_INSTALL_DIR); \
	done
	if test ! -d $(BIN_INSTALL_DIR); then \
	  $(INSTALL) -d $(BIN_INSTALL_DIR); \
	fi
	for f in $(INSTALL_BINS); do \
	  $(INSTALL) -m 555 $$f $(BIN_INSTALL_DIR); \
	  $(INSTALL) -m 555 $$f $(ARCH_INSTALL_DIR); \
	done
	# kludge for cygwin
	if test "@LIBGAUCHE_SO@" = libgauche.dll; then \
	  $(INSTALL) -m 555 @LIBGAUCHE_SO@ $(BIN_INSTALL_DIR); \
	fi
	$(INSTALL) -d $(SCM_INSTALL_DIR)
	for f in $(INSTALL_SCMS); do \
	  $(INSTALL) -m 444 $$f $(SCM_INSTALL_DIR); \
	done
	$(INSTALL) -d $(SITE_SCM_DIR)
	$(INSTALL) -d $(SITE_ARCH_DIR)

uninstall :
	for f in $(INSTALL_BINS); do rm -f $(BIN_INSTALL_DIR)/$$f; done
	rm -rf $(GAUCHE_ARCH_DIR)/@GAUCHE_VERSION@ $(GAUCHE_DATA_DIR)/@GAUCHE_VERSION@ $(GAUCHE_ARCH_DIR)/site/@GAUCHE_VERSION@
