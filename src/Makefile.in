#
# Makefile.in for Gauche/src
#  $ID$
#

# prelude ---------------------------------------------

.SUFFIXES:
.SUFFIXES: .S .c .o .obj .s .stub

.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

.stub.c:
	gosh ./genstub -D LIBGAUCHE_BODY $<

SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)
top_builddir = @top_builddir@
top_srcdir   = @top_srcdir@

# These may be overridden by make invocators
DESTDIR  =
CC       = @CC@
AR       = @AR@
LIBS     = @LIBS@
CFLAGS   = @CFLAGS@ @SHLIB_SO_CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS  = @LDFLAGS@


# These are set by configure
DEFS     = @DEFS@
OPTFLAGS = @OPTFLAGS@
INCLUDES = -I$(srcdir) -I$(srcdir)/../gc/include @LOCAL_INC@
RANLIB   = @RANLIB@
OBJEXT   = @OBJEXT@
EXEEXT   = @EXEEXT@
SOEXT    = @SHLIB_DYLIB_SUFFIX@
LINK_HELPER = @LINK_HELPER@
RPATH_TMP  = @RPATH_TMP@
RPATH_REAL = @RPATH_REAL@
MAKEVERSLINK = @MAKEVERSLINK@

# Main definition of compilation commands
COMPILE   = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(OPTFLAGS)
MKINSTDIR = $(top_srcdir)/mkinstalldirs
CCLD      = $(LINK_HELPER) $(CC)
LINK      = TARGETLIB=`pwd` $(CCLD) $(CFLAGS) $(RPATH_TMP) $(LDFLAGS)
RELINK    = TARGETLIB=$(LIB_INSTALL_DIR) $(CCLD) $(CFLAGS) $(RPATH_REAL) $(LDFLAGS)
INSTALL   = @INSTALL@
POSTBUILD = TARGETLIB=`pwd` $(MAKEVERSLINK) libgauche.$(SOEXT)
POSTINSTALL = TARGETLIB=$(LIB_INSTALL_DIR) $(MAKEVERSLINK) libgauche.$(SOEXT)

LIB_INSTALL_DIR  = @libdir@
BIN_INSTALL_DIR  = @bindir@
DATA_INSTALL_DIR = @datadir@

GAUCHE_DATA_DIR = @datadir@/gauche
GAUCHE_ARCH_DIR = @libdir@/gauche

HEADER_INSTALL_DIR    = $(GAUCHE_ARCH_DIR)/@GAUCHE_VERSION@/include
SCM_INSTALL_DIR       = $(GAUCHE_DATA_DIR)/@GAUCHE_VERSION@/lib
ARCH_INSTALL_DIR      = $(GAUCHE_ARCH_DIR)/@GAUCHE_VERSION@/@host@
SITE_SCM_DIR          = $(GAUCHE_DATA_DIR)/site/lib
SITE_ARCH_DIR         = $(GAUCHE_ARCH_DIR)/site/@GAUCHE_VERSION@/@host@
ARCH = @host@

INSTALL_HEADERS = gauche.h \
	../gc/include/gc.h \
	../gc/include/gc_config_macros.h \
	../gc/include/gc_pthread_redirects.h
INSTALL_SUBHEADERS = gauche/config.h gauche/vm.h gauche/vminsn.h \
                     gauche/char_euc_jp.h gauche/char_utf_8.h    \
                     gauche/char_sjis.h gauche/char_none.h       \
                     gauche/predef-syms.h gauche/extend.h        \
                     gauche/class.h gauche/exception.h           \
                     gauche/pthread.h gauche/uthread.h gauche/arch.h
INSTALL_LIBS = libgauche.$(SOEXT)
INSTALL_BINS = gosh gauche-config
INSTALL_SCMS = genstub gauche-init.scm


# build -----------------------------------------------

GCLIB = ../gc/libgc.la

gosh_SOURCES = main.c
gosh_OBJECTS = main.$(OBJEXT)
gosh_LDADD   = -L. -lgauche
gosh_LDFLAGS = @SHLIB_MAIN_LDFLAGS@

libgauche_LIBRARY = libgauche.$(SOEXT)
libgauche_OBJECTS = \
        core.$(OBJEXT) vm.$(OBJEXT) compile.$(OBJEXT) macro.$(OBJEXT) \
	error.$(OBJEXT) class.$(OBJEXT) boolean.$(OBJEXT) char.$(OBJEXT) \
        string.$(OBJEXT) list.$(OBJEXT) port.$(OBJEXT) hash.$(OBJEXT) \
	write.$(OBJEXT) read.$(OBJEXT) vector.$(OBJEXT) weak.$(OBJEXT) \
	symbol.$(OBJEXT) keyword.$(OBJEXT) compare.$(OBJEXT) \
	regexp.$(OBJEXT) signal.$(OBJEXT) parameter.$(OBJEXT) \
	module.$(OBJEXT) proc.$(OBJEXT) number.$(OBJEXT) bignum.$(OBJEXT) \
	load.$(OBJEXT) promise.$(OBJEXT) repl.$(OBJEXT) \
	system.$(OBJEXT) stdlib.$(OBJEXT) extlib.$(OBJEXT) exclib.$(OBJEXT) \
	syslib.$(OBJEXT) moplib.$(OBJEXT)
libgauche_LDFLAGS = @SHLIB_DYLIB_LDFLAGS@

HEADERS = gauche.h $(INSTALL_SUBHEADERS)

OBJECTS = $(libgauche_OBJECTS) $(gosh_OBJECTS)

all : gosh$(EXEEXT) libgauche.$(SOEXT)

gosh$(EXEEXT) : libgauche.$(SOEXT) $(gosh_OBJECTS) 
	@rm -f gosh$(EXEEXT)
	$(LINK) $(gosh_LDFLAGS) -o gosh$(EXEEXT) $(gosh_OBJECTS) $(gosh_LDADD) $(LIBS)

relink :
	$(RELINK) $(libgauche_LDFLAGS) libgauche.$(SOEXT) $(libgauche_OBJECTS) ../gc/.libs/*.o $(LIBS)
	$(RELINK) $(gosh_LDFLAGS) -o gosh$(EXEEXT)  $(gosh_OBJECTS) $(gosh_LDADD) $(LIBS)

$(OBJECTS) : $(HEADERS)

stdlib.c : stdlib.stub genstub 
extlib.c : extlib.stub genstub
exclib.c : exclib.stub genstub
syslib.c : syslib.stub genstub
moplib.c : moplib.stub genstub

port.$(OBJEXT) : port.c portapi.c

load.$(OBJEXT) : dl_dlopen.c dl_dummy.c dl_win.c dl_darwin.c

libgauche.$(SOEXT) : $(libgauche_OBJECTS) $(GCLIB)
	$(LINK) $(libgauche_LDFLAGS) libgauche.$(SOEXT) $(libgauche_OBJECTS) ../gc/.libs/*.o $(LIBS)
	$(POSTBUILD)

gauche/arch.h :
	@rm -f gauche/arch.h
	@echo "/* Generated by Makefile.  DO NOT EDIT */" > gauche/arch.h
	@echo '#define GAUCHE_ARCH "$(ARCH)"' >> gauche/arch.h
	@echo '#define GAUCHE_LIB_DIR "$(SCM_INSTALL_DIR)"' >> gauche/arch.h
	@echo '#define GAUCHE_ARCH_DIR "$(ARCH_INSTALL_DIR)"' >> gauche/arch.h
	@echo '#define GAUCHE_SITE_LIB_DIR "$(SITE_SCM_DIR)"' >> gauche/arch.h
	@echo '#define GAUCHE_SITE_ARCH_DIR "$(SITE_ARCH_DIR)"' >> gauche/arch.h

# tests -----------------------------------------------
TESTFILES = `cat ../test/TESTS`

check : test

test : gosh$(EXEEXT) test-vmstack$(EXEEXT) test-arith$(EXEEXT)
	@rm -f test.log
	./test-vmstack >> test.log
	./test-arith >> test.log
	@for testfile in $(TESTFILES); do \
	  ./gosh -ftest -I../test $$testfile >> test.log; \
	done
	@./gosh -ftest -e "(define *case-fold* #f)" ../test/symcase.scm >> test.log
	@./gosh -ftest -fcase-fold -e "(define *case-fold* #t)" ../test/symcase.scm >> test.log
	@echo "See test.log for details."

test-vmstack$(EXEEXT) : test-vmstack.$(OBJEXT) libgauche.$(SOEXT)
	$(LINK)	-o test-vmstack$(EXEEXT) test-vmstack.$(OBJEXT) $(gosh_LDADD) $(LIBS)

test-arith$(EXEEXT) : test-arith.$(OBJEXT) libgauche.$(SOEXT)
	$(LINK)	-o test-arith$(EXEEXT) test-arith.$(OBJEXT) $(gosh_LDADD) $(LIBS)

test-arith.$(OBJEXT) : gauche/arith.h

install-check :
	@rm -rf test.log
	@for f in `cat ../test/TESTS`; do \
	  ${prefix}/bin/gosh ../test/$$f; \
	done

# clean ------------------------------------------------
GENERATED = stdlib.c extlib.c exclib.c syslib.c moplib.c thrlib.c
CONFIG_GENERATED = Makefile gauche-config gauche/config.h

clean :
	rm -rf core core.[0-9]* gosh$(EXEEXT) \
	       test-vmstack$(EXEEXT) test-arith$(EXEEXT)   \
	       libgauche.$(SOEXT)* *.$(OBJEXT) *~ *.a *.t *.def *.exp \
	       test.log test.dir so_locations gauche/*~ gauche/arch.h

distclean : clean
	rm -f $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -f $(CONFIG_GENERATED) $(GENERATED)

# install ----------------------------------------------

INSTALL_DIRS = $(DESTDIR)$(HEADER_INSTALL_DIR) \
	       $(DESTDIR)$(HEADER_INSTALL_DIR)/gauche \
	       $(DESTDIR)$(SCM_INSTALL_DIR) \
	       $(DESTDIR)$(ARCH_INSTALL_DIR) \
	       $(DESTDIR)$(BIN_INSTALL_DIR) \
	       $(DESTDIR)$(SITE_SCM_DIR) \
	       $(DESTDIR)$(SITE_ARCH_DIR)

install : all relink
	$(MKINSTDIR) $(INSTALL_DIRS)
	$(INSTALL) -m 444 $(INSTALL_HEADERS) $(DESTDIR)$(HEADER_INSTALL_DIR)
	$(INSTALL) -m 444 $(INSTALL_SUBHEADERS) $(DESTDIR)$(HEADER_INSTALL_DIR)/gauche
	$(INSTALL)        $(INSTALL_LIBS) $(DESTDIR)$(LIB_INSTALL_DIR)
	$(INSTALL)        $(INSTALL_LIBS) $(DESTDIR)$(ARCH_INSTALL_DIR)
	$(INSTALL) -m 555 $(INSTALL_BINS) $(DESTDIR)$(BIN_INSTALL_DIR)
	$(INSTALL) -m 555 $(INSTALL_BINS) $(DESTDIR)$(ARCH_INSTALL_DIR)
	$(INSTALL) -m 444 $(INSTALL_SCMS) $(DESTDIR)$(SCM_INSTALL_DIR)
	@case `$(SHELL) gauche-config --arch` in *-cygwin*) \
	  $(INSTALL) $(INSTALL_LIBS) $(DESTDIR)$(BIN_INSTALL_DIR);;\
	esac
	$(POSTINSTALL)

uninstall :
	for f in $(INSTALL_BINS); do rm -f $(BIN_INSTALL_DIR)/$$f; done
	rm -rf $(GAUCHE_ARCH_DIR)/@GAUCHE_VERSION@ $(GAUCHE_DATA_DIR)/@GAUCHE_VERSION@ $(GAUCHE_ARCH_DIR)/site/@GAUCHE_VERSION@
