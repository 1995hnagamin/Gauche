## Common stuff used in Makefiles of extensions
## $Id: Makefile.ext.in,v 1.9 2003-06-25 09:58:30 shirok Exp $
## 

SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
VPATH       = $(srcdir)

# These may be overridden by make invocators
DESTDIR  =
CC       = @CC@
AR       = @AR@
LIBS     = @LIBS@
CFLAGS   = @CFLAGS@ @SHLIB_SO_CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS  = @SHLIB_SO_LDFLAGS@


# These are set by configure
DEFS     = @DEFS@
OPTFLAGS = @OPTFLAGS@
INCLUDES = -I$(srcdir) -I$(top_srcdir)/src -I$(top_srcdir)/gc/include @LOCAL_INC@ $(EXTRA_INCLUDES)
RANLIB   = @RANLIB@
OBJEXT   = @OBJEXT@
EXEEXT   = @EXEEXT@
SOEXT    = @SHLIB_SO_SUFFIX@

# Main definition of compilation commands
#  NB: we don't use -no-undefined flag to link, since it causes a problem
#  on MacOSX, on which we need to make gosh statically linked.
COMPILE   = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(OPTFLAGS)
CCLD      = $(CC)
MKINSTDIR = $(top_srcdir)/mkinstalldirs
LINK      = $(CCLD) $(CFLAGS) $(LDFLAGS)
MODLINK   = $(CCLD) $(CFLAGS) $(LDFLAGS)
INSTALL   = @INSTALL@

GOSH = $(top_builddir)/src/gosh -ftest
GAUCHE_CONFIG = $(SHELL) $(top_srcdir)/src/gauche-config
INSTALL_TYPE = sys

MOD_LDFLAGS  = -module -avoid-version
EXT_LIBGAUCHE = -L$(top_builddir)/src @EXT_LIBGAUCHE@
EXT_NO_UNDEFINED = @EXT_NO_UNDEFINED@

GAUCHE_INCDIR  = `$(GAUCHE_CONFIG) --$(INSTALL_TYPE)incdir`
GAUCHE_LIBDIR  = `$(GAUCHE_CONFIG) --$(INSTALL_TYPE)libdir`
GAUCHE_ARCHDIR = `$(GAUCHE_CONFIG) --$(INSTALL_TYPE)archdir`

CLEANFILES = core *~ test.log

.SUFFIXES:
.SUFFIXES: .S .c .o .obj .s .stub

.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

.stub.c :
	$(GOSH) genstub $<

default : all

check : all
	@rm -f test.log
	$(GOSH) -I. test.scm > test.log

install-check :
	${bindir}/gosh test.scm

clean : 
	rm -rf $(CLEANFILES) *.$(OBJEXT) *.$(SOEXT)

distclean : clean
	rm -rf $(GENERATED)

maintainer-clean : clean
	rm -rf $(GENERATED)

install-std : all
	$(MKINSTDIR) $(GAUCHE_LIBDIR)/$(SCM_CATEGORY)
	@if test ! -z "$(HDRFILES)"; then \
	  $(INSTALL) -m 444 $(HDRFILES) $(GAUCHE_INCDIR)/gauche; \
	fi
	@if test ! -z "$(SCMFILES)"; then \
	  $(INSTALL) -m 444 $(SCMFILES) $(GAUCHE_LIBDIR)/$(SCM_CATEGORY); \
	fi
	if test ! -z "$(LIBFILES)"; then \
	  $(INSTALL) -m 555 $(LIBFILES) $(GAUCHE_ARCHDIR); \
	fi

uninstall :
