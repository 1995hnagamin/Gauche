@SET_MAKE@
SUBDIRS= srfi auxsys threads uvector charconv binary net termios \
         fcntl file util sxml syslog dbm mt-random digest vport

CONFIG_GENERATED = Makefile Makefile.ext

SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
datadir     = @datadir@
srcdir      = @srcdir@
VPATH       = $(srcdir)
top_builddir = @top_builddir@
top_srcdir   = @top_srcdir@
GAUCHE_VERSION = @GAUCHE_VERSION@
DESTDIR     =

INSTALL = @INSTALL@
TEMPLATE_INST_DIR = $(datadir)/gauche/$(GAUCHE_VERSION)

TEMPLATES = template.Makefile.in template.configure.in \
	    template.extension.h template.extension.c \
	    template.extensionlib.stub template.module.scm \
	    template.test.scm template.DIST

all:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) default); done

test : check

check:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) check); done

install:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) install); done
	$(INSTALL) -m 444 $(TEMPLATES) $(DESTDIR)$(TEMPLATE_INST_DIR)

uninstall:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) uninstall); done
	for f in $(TEMPLATES); do \
	  rm -f $(DESTDIR)$(TEMPLATE_INST_DIR)/$$f; \
	done

clean:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) clean); done
	rm -rf core *~

link :
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) link); done

unlink :
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) unlink); done

distclean: clean
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) distclean); done
	rm -rf $(CONFIG_GENERATED)

maintainer-clean: clean
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) maintainer-clean); done
	rm -rf $(CONFIG_GENERATED)

install-check:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) install-check); done
