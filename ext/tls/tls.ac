dnl
dnl Configure ext/tls
dnl This file is included by the toplevel configure.ac
dnl

dnl
dnl process --enable-tls[=TYPE]
dnl
dnl   TYPE can be 'none' or 'axtls', defaults axtls
dnl   In future we may support 'openssl' as well.
dnl
AC_ARG_ENABLE(tls,
  AS_HELP_STRING([--enable-tls=TYPE], [enable TLS/SSL support.  TYPE can be
  'axtls' (to use bundled source of Cameron Rich's axTLS), 'mbedtls' (to use
  mbed TLS), or 'none' (disable TLS/SSL support)]),
  [
    AS_CASE([$enableval],
      [no|none], [enable_tls=no],
      [axtls],   [enable_tls=axtls],
      [mbedtls], [enable_tls=mbedtls],
dnl      [openssl], [enable_tls=openssl],
		 [echo "TLS type must be either one of 'axtls', 'mbedtls' or 'none'"])
  ], [enable_tls=axtls])

AS_CASE([$enable_tls],
  [axtls], [
	   AC_DEFINE(GAUCHE_USE_AXTLS, 1, [Define if you use axTLS])
	   GAUCHE_TLS_TYPE=axTLS
	   GAUCHE_TLS_SWITCH_AXTLS=
	   dnl axtls test program requires thread support.  For the time being,
	   dnl we turn off test program if the thread support is turned off
	   dnl (which is not ideal).
	   AS_IF([test "$GAUCHE_THREAD_TYPE" = 'none'], [
	     GAUCHE_TLS_SWITCH_AXTLS_TEST="@%:@"
	   ], [
	     GAUCHE_TLS_SWITCH_AXTLS_TEST=
	   ])
	   GAUCHE_TLS_SWITCH_MBEDTLS="@%:@"
	   GAUCHE_TLS_SWITCH_NONE="@%:@"
	   ],
  [mbedtls], [
	   AC_CHECK_HEADER([mbedtls/net_sockets.h],
		[AC_DEFINE(HAVE_MBEDTLS_NET_SOCKETS_H, 1, [Define to 1 if you have the <mbedtls/net_sockets.h> header file.])],
		[AC_CHECK_HEADER([mbedtls/net.h],
				 [AC_DEFINE(HAVE_MBEDTLS_NET_H, 1, [Define to 1 if you have the <mbedtls/net.h> header file.])],
				 [AC_MSG_ERROR([Required mbed TLS header file is missing])])])

	   AC_DEFINE(GAUCHE_USE_MBEDTLS, 1, [Define if you use mbed TLS])
	   GAUCHE_TLS_TYPE=mbedTLS
	   GAUCHE_TLS_SWITCH_AXTLS="@%:@"
	   GAUCHE_TLS_SWITCH_AXTLS_TEST="@%:@"
	   GAUCHE_TLS_SWITCH_MBEDTLS=
	   GAUCHE_TLS_SWITCH_NONE="@%:@"

	   EXT_LIBS="${EXT_LIBS} -lmbedtls -lmbedx509 -lmbedcrypto"
	  ],
dnl [openssl], [
dnl	   AC_DEFINE(GAUCHE_USE_OPENSSL, 1, [Define if you use openssl])
dnl	   GAUCHE_TLS_TYPE=openssl
dnl	  ],

	  [
	   GAUCHE_TLS_TYPE=none
	   GAUCHE_TLS_SWITCH_AXTLS="@%:@"
	   GAUCHE_TLS_SWITCH_AXTLS_TEST="@%:@"
	   GAUCHE_TLS_SWITCH_MBEDTLS="@%:@"
	   GAUCHE_TLS_SWITCH_NONE=
	  ])

AC_SUBST(GAUCHE_TLS_SWITCH_AXTLS)
AC_SUBST(GAUCHE_TLS_SWITCH_AXTLS_TEST)
AC_SUBST(GAUCHE_TLS_SWITCH_MBEDTLS)
AC_SUBST(GAUCHE_TLS_SWITCH_NONE)

AC_ARG_ENABLE([tls-ca-file-path],
  AS_HELP_STRING([--enable-tls-ca-file-path=/path/to/ca-cert.crt],
		 [Specify CA certificate file path for TLS certificate validation. This file is required to use mbed TLS.]),
  [
    AS_CASE([$enable_tls_ca_file_path],
	[yes|no], [AC_DEFINE([X509_CA_FILE], ["ca-cert.crt"])],
                  [AC_DEFINE_UNQUOTED([X509_CA_FILE], ["$enable_tls_ca_file_path"], [CA file path])]
     )
  ], [
    AC_DEFINE([X509_CA_FILE], ["ca-cert.crt"])
  ])

dnl
dnl Check openssl command; if available, we use it for axTLS tests.
dnl This is needed even if we don't support libopenssl binding.
dnl
AC_CHECK_PROGS(OPENSSL, openssl)

dnl Local variables:
dnl mode: autoconf
dnl end:
