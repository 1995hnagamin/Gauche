.SUFFIXES: .stub .c

CC = @CC@
OPTFLAGS = @OPTFLAGS@
CFLAGS = @DEFS@ @CFLAGS@ $(OPTFLAGS)
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
GOSH = @GOSH@
GAUCHE_CONFIG = @GAUCHE_CONFIG@
GAUCHE_TOP = @GAUCHE_TOP@
INSTALL = @LIBTOOL@ --mode=install @INSTALL@
LIBTOOL = @LIBTOOL@
top_builddir = $(GAUCHE_TOP)

ARCHFILES = @ARCHFILES@
SCMFILES = @SCMFILES@
HEADERS = 

TARGET = @ARCHFILES@
CONFIG_GENERATED = Makefile config.cache config.log config.status dbmconfig.h \
		   gdbm_head.c gdbm_tail.c ndbm_head.c ndbm_tail.c \
                   odbm_head.c odbm_tail.c bsddb_head.c bsddb_tail.c \
                   autom4te*.cache libtool
GENERATED = gdbm.c ndbm.c odbm.c bsddb.c

GDBM_OBJS = gdbm_head.lo gdbm.lo gdbm_tail.lo
NDBM_OBJS = ndbm_head.lo ndbm.lo ndbm_tail.lo
ODBM_OBJS = odbm_head.lo odbm.lo odbm_tail.lo

ALLOBJS = $(GDBM_OBJS) $(NDBM_OBJS) $(ODBM_OBJS)

INSTALL_TYPE = @INSTALL_TYPE@
HEADER_INSTALL_DIR  = `$(GAUCHE_CONFIG) --$(INSTALL_TYPE)incdir`
SCM_INSTALL_DIR     = `$(GAUCHE_CONFIG) --$(INSTALL_TYPE)libdir`
ARCH_INSTALL_DIR    = `$(GAUCHE_CONFIG) --$(INSTALL_TYPE)archdir`

.SUFFIXES: .lo

.c.lo:
	$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -c $< -o $@

all : $(TARGET)

.stub.c :
	$(GOSH) genstub $<

gdbm.la : $(GDBM_OBJS)
	$(LIBTOOL) --mode=link $(CC) -module -avoid-version -rpath $(ARCH_INSTALL_DIR) $(LDFLAGS) gdbm.la $(GDBM_OBJS) @GDBMLIB@ $(LIBS)

ndbm.la : $(NDBM_OBJS)
	$(LIBTOOL) --mode=link $(CC) -module -avoid-version -rpath $(ARCH_INSTALL_DIR) $(LDFLAGS) ndbm.la $(NDBM_OBJS) @NDBMLIB@ $(LIBS)

odbm.la : $(ODBM_OBJS)
	$(LIBTOOL) --mode=link $(CC) -module -avoid-version -rpath $(ARCH_INSTALL_DIR) $(LDFLAGS) odbm.la $(ODBM_OBJS) @ODBMLIB@ $(LIBS)

#bsddb.la : $(BSDDB_OBJS)
#	$(CC) $(LDFLAGS) bsddb.la $(BSDDB_OBJS) @BSDDBLIB@ $(LIBS)

check : test

test : all
	@rm -f test.log
	$(GOSH) -I. test.scm > test.log

install : all
	@for f in $(HEADERS) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -m 444 $$f $(HEADER_INSTALL_DIR); \
	  fi; \
	done
	@$(INSTALL) -m 444 dbm.scm $(SCM_INSTALL_DIR)
	@$(INSTALL) -d $(SCM_INSTALL_DIR)/dbm
	@for f in $(SCMFILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -m 444 $$f $(SCM_INSTALL_DIR)/dbm/; \
	  fi; \
	done
	@for f in $(ARCHFILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -m 555 $$f $(ARCH_INSTALL_DIR); \
	  fi; \
	done

clean :
	rm -rf core $(TARGET) $(GENERATED) $(ALLOBJS) *.o *~ test.log so_locations
	rm -rf .libs _libs

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : realclean

realclean : clean
	rm -rf $(CONFIG_GENERATED) configure

# 'link' creates symlinks from source tree to extension modules, so that
# it can be tested within the source tree.  'unlink' removes them.
# these are only for developer's.

link : $(TARGET) $(SCMFILES)
	if test ! -d $(GAUCHE_TOP)/lib/dbm; then mkdir $(GAUCHE_TOP)/lib/dbm; fi
	$(GOSH) ../xlink -d dbm -l $(TARGET) $(SCMFILES)

unlink :
	-$(GOSH) ../xlink -d dbm -u $(TARGET) $(SCMFILES)
	rm -rf $(GAUCHE_TOP)/lib/dbm
