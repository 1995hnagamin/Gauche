Compiling Windows/MinGW version of Gauche

There's some rudimental support to compile Gauche with MinGW
runtime library (see http://www.mingw.org/ ).  The advantage
to do so is that you can distribute pre-compiled Windows binary
of Gauche without requiring GPLed cygwin DLL.   However, large
part of Gauche's system functions assume POSIX, and Windows/MinGW
falls short of it---many system-related built-in functions of
Gauche isn't available on Gauche/MinGW.   Due to that, the MinGW
version fails lots of test suite at this moment.  Think it "experimental".

To _compile_ MinGW version, however, you need cygwin environment.
First, set PATH so that MinGW's gcc comes before Cygwin gcc.  For
exampe, if you installed MinGW environment under C:/mingw, say:

  $ PATH=/cygdrive/c/mingw/bin:${PATH}

Now you can run configure with --build option to tell you'll 
configure for mingw.

  $ ./configure --build=i386-pc-mingw32

(You can use 'i586' or 'i686', depending on which processor
you have).

Then run make.  (Make sure you start from a clean source tree;
if you have remaining stuff from cygwin build, for example,
you'll fail.  Good way to make sure of it is to run 'make distclean'
before configure.)


If you're compiling from CVS tree, you don't have configure scripts,
so you have to run 'DIST' script to generate it.

  $ ./DIST gen

Note: The configure script generated by autoconf 2.59 misteriously 
fail if --build option is used; I suspect it's an obscure bug of
cygwin's bash or expr command, but haven't digged enough.  The DIST
script applies the following patch after generating configure; if
you generate the configure manually by autoconf, you have to apply
the patch, too.

--- gc/configure	2004-07-14 12:52:50.000000000 -1000
+++ gc/configure	2004-07-14 22:24:22.000000000 -1000
@@ -793,6 +793,7 @@
   *=*)
     ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
     # Reject names that are not valid shell variable names.
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null
     expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }


