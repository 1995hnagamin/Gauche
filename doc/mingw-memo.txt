A note on Windows/MinGW support

Now you can compile Gauche to use MinGW runtime library
(see http://www.mingw.org/ ), so that the produced binary can
be easily distributed.

Because of the difference of the underlying system, not all
system-related procedures are available on MinGW port.
The reference manual tells whether a particular procedure
is supported on "Windows native"---meaning MinGW or WinVC version.


[Compilation]

To compile MinGW version, you also need MSYS environment
in order to run 'configure'.   (You don't need MSYS to run
the compiled Gauche.)

Most extension modules work, although system-related ones
may have limited functionalities.   You can compile ext/zlib
if you have installed mingw-zlib DLL before 'configure'
(you need both "dll" and "dev" tarballs installed).

Gdbm isn't work straightforwardly, since there's no official
MinGW port of gdbm.  MSYS-gdbm does NOT work.  You may be
able to compile gdbm from source on MinGW (you need some patch;
look for the Net.  It is also said that you have to configure
it with --disable-shared.)  Once you have MinGW gdbm installed,
Gauche's 'configure' will find it and builds dbm.gdbm etc,
though some test errors result.


[Installtaion and packaging]

If you want to run the mingw version of Gauche on the same
machine you compile it, probably it is easier to give
--prefix=/mingw to 'configure'.

If you want to copy compiled Gauche to the machine where
mingw might not exist, you need to include mingw DLL 
(and zlib DLL if you compiled with zlib).  There's a
convenience shell script in src/mingw-dist.sh.   Just run
it on the top of the Gauche source directory, and it will
create a directory ../Gauche-mingw-dist and installs compiled
Gauche into it, with MinGW dlls.
